# Based on the "trust" template v0.1.2
# https://github.com/japaric/trust/tree/v0.1.2

environment:
  global:
    RUST_VERSION: nightly
    CRATE_NAME: rustfinder
    RUST_BACKTRACE: "1"

  matrix:
    # MinGW
    #- TARGET: i686-pc-windows-gnu
    #- TARGET: x86_64-pc-windows-gnu

    # MSVC
    - TARGET: i686-pc-windows-msvc
    - TARGET: x86_64-pc-windows-msvc

init:
  - ps: >-
      if ($env:APPVEYOR_REPO_TAG -eq "true") {
        Update-AppveyorBuild -Version "$($env:APPVEYOR_REPO_TAG_NAME.TrimStart("v"))"
      } else {
        Update-AppveyorBuild -Version "dev-$($env:APPVEYOR_REPO_COMMIT.substring(0,7))"
      }

install:
  - ps: >-
      If ($Env:TARGET -eq 'x86_64-pc-windows-gnu') {
        $Env:PATH += ';C:\msys64\mingw64\bin'
      } ElseIf ($Env:TARGET -eq 'i686-pc-windows-gnu') {
        $Env:PATH += ';C:\msys64\mingw32\bin'
      }
  - curl -sSf -o rustup-init.exe https://win.rustup.rs/
  - rustup-init.exe -y --default-host %TARGET% --default-toolchain %RUST_VERSION%
  - set PATH=%PATH%;C:\Users\appveyor\.cargo\bin
  - rustc -Vv
  - cargo -V

test_script:
  - if [%APPVEYOR_REPO_TAG%]==[false] (
      cargo build --target %TARGET% &&
      cargo build --target %TARGET% --release &&
      cargo test --target %TARGET% &&
      cargo test --target %TARGET% --release &&
      cargo run --target %TARGET% -- --help &&
      cargo run --target %TARGET% --release -- --help
    )

before_deploy:
  - cargo rustc --target %TARGET% --release --bin rustfinder -- -C lto
  - ps: bin\ci\before_deploy.ps1

deploy:
  artifact: /.*\.zip/
  auth_token:
    secure: Gy+SYlB3nanUCtT85irnqDA2iaQMKGwYBb05lJ360n6mjSSOPGJIybSurV8i66Cj
  description: ''
  provider: GitHub

cache:
  - C:\Users\appveyor\.cargo\registry
  - target

branches:
  only:
    # Release tags
    - /^v\d+\.\d+\.\d+.*$/
    #- master

notifications:
  - provider: Email
    on_build_success: false

# Building is done in the test phase, so we disable Appveyor's build phase.
build: false
